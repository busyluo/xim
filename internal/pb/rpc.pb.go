// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SignInReq struct {
	App                  App      `protobuf:"varint,1,opt,name=app,proto3,enum=pb.App" json:"app,omitempty"`
	DeviceId             int64    `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	UserId               int64    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInReq) Reset()         { *m = SignInReq{} }
func (m *SignInReq) String() string { return proto.CompactTextString(m) }
func (*SignInReq) ProtoMessage()    {}
func (*SignInReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *SignInReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInReq.Unmarshal(m, b)
}
func (m *SignInReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInReq.Marshal(b, m, deterministic)
}
func (m *SignInReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInReq.Merge(m, src)
}
func (m *SignInReq) XXX_Size() int {
	return xxx_messageInfo_SignInReq.Size(m)
}
func (m *SignInReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInReq.DiscardUnknown(m)
}

var xxx_messageInfo_SignInReq proto.InternalMessageInfo

func (m *SignInReq) GetApp() App {
	if m != nil {
		return m.App
	}
	return App_APP_UNKNOWN
}

func (m *SignInReq) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *SignInReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *SignInReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// 上行消息
type UpMessage struct {
	ReceiverType ReceiverType `protobuf:"varint,1,opt,name=receiver_type,json=receiverType,proto3,enum=pb.ReceiverType" json:"receiver_type,omitempty"`
	Receiver     int64        `protobuf:"varint,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Seq          int64        `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	SendTime     int64        `protobuf:"varint,4,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	// Types that are valid to be assigned to Content:
	//	*UpMessage_Text
	//	*UpMessage_Image
	Content              isUpMessage_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UpMessage) Reset()         { *m = UpMessage{} }
func (m *UpMessage) String() string { return proto.CompactTextString(m) }
func (*UpMessage) ProtoMessage()    {}
func (*UpMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *UpMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpMessage.Unmarshal(m, b)
}
func (m *UpMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpMessage.Marshal(b, m, deterministic)
}
func (m *UpMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpMessage.Merge(m, src)
}
func (m *UpMessage) XXX_Size() int {
	return xxx_messageInfo_UpMessage.Size(m)
}
func (m *UpMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UpMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UpMessage proto.InternalMessageInfo

func (m *UpMessage) GetReceiverType() ReceiverType {
	if m != nil {
		return m.ReceiverType
	}
	return ReceiverType_RECEIVER_UNKNOWN
}

func (m *UpMessage) GetReceiver() int64 {
	if m != nil {
		return m.Receiver
	}
	return 0
}

func (m *UpMessage) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *UpMessage) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

type isUpMessage_Content interface {
	isUpMessage_Content()
}

type UpMessage_Text struct {
	Text *Text `protobuf:"bytes,5,opt,name=text,proto3,oneof"`
}

type UpMessage_Image struct {
	Image *Image `protobuf:"bytes,6,opt,name=image,proto3,oneof"`
}

func (*UpMessage_Text) isUpMessage_Content() {}

func (*UpMessage_Image) isUpMessage_Content() {}

func (m *UpMessage) GetContent() isUpMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *UpMessage) GetText() *Text {
	if x, ok := m.GetContent().(*UpMessage_Text); ok {
		return x.Text
	}
	return nil
}

func (m *UpMessage) GetImage() *Image {
	if x, ok := m.GetContent().(*UpMessage_Image); ok {
		return x.Image
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UpMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UpMessage_Text)(nil),
		(*UpMessage_Image)(nil),
	}
}

// 下行消息
type DownMessage struct {
	Sender   int64 `protobuf:"varint,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Seq      int64 `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	SendTime int64 `protobuf:"varint,4,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	// Types that are valid to be assigned to Content:
	//	*DownMessage_Text
	//	*DownMessage_Image
	Content              isDownMessage_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DownMessage) Reset()         { *m = DownMessage{} }
func (m *DownMessage) String() string { return proto.CompactTextString(m) }
func (*DownMessage) ProtoMessage()    {}
func (*DownMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}

func (m *DownMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownMessage.Unmarshal(m, b)
}
func (m *DownMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownMessage.Marshal(b, m, deterministic)
}
func (m *DownMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownMessage.Merge(m, src)
}
func (m *DownMessage) XXX_Size() int {
	return xxx_messageInfo_DownMessage.Size(m)
}
func (m *DownMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DownMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DownMessage proto.InternalMessageInfo

func (m *DownMessage) GetSender() int64 {
	if m != nil {
		return m.Sender
	}
	return 0
}

func (m *DownMessage) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *DownMessage) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

type isDownMessage_Content interface {
	isDownMessage_Content()
}

type DownMessage_Text struct {
	Text *Text `protobuf:"bytes,5,opt,name=text,proto3,oneof"`
}

type DownMessage_Image struct {
	Image *Image `protobuf:"bytes,6,opt,name=image,proto3,oneof"`
}

func (*DownMessage_Text) isDownMessage_Content() {}

func (*DownMessage_Image) isDownMessage_Content() {}

func (m *DownMessage) GetContent() isDownMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *DownMessage) GetText() *Text {
	if x, ok := m.GetContent().(*DownMessage_Text); ok {
		return x.Text
	}
	return nil
}

func (m *DownMessage) GetImage() *Image {
	if x, ok := m.GetContent().(*DownMessage_Image); ok {
		return x.Image
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DownMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DownMessage_Text)(nil),
		(*DownMessage_Image)(nil),
	}
}

// rpc
// message Empty {}
type SendMessageResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageResponse) Reset()         { *m = SendMessageResponse{} }
func (m *SendMessageResponse) String() string { return proto.CompactTextString(m) }
func (*SendMessageResponse) ProtoMessage()    {}
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}

func (m *SendMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageResponse.Unmarshal(m, b)
}
func (m *SendMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageResponse.Marshal(b, m, deterministic)
}
func (m *SendMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageResponse.Merge(m, src)
}
func (m *SendMessageResponse) XXX_Size() int {
	return xxx_messageInfo_SendMessageResponse.Size(m)
}
func (m *SendMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SignInReq)(nil), "pb.SignInReq")
	proto.RegisterType((*UpMessage)(nil), "pb.UpMessage")
	proto.RegisterType((*DownMessage)(nil), "pb.DownMessage")
	proto.RegisterType((*SendMessageResponse)(nil), "pb.SendMessageResponse")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x92, 0xc1, 0xce, 0xd2, 0x40,
	0x14, 0x85, 0x29, 0xa5, 0xa5, 0xbd, 0x80, 0x21, 0xa3, 0x62, 0x2d, 0x89, 0xa9, 0xac, 0xba, 0x2a,
	0x09, 0xea, 0x03, 0x68, 0x34, 0xa1, 0x89, 0x6e, 0x06, 0x5c, 0x13, 0xda, 0x5e, 0x9b, 0x89, 0x76,
	0x66, 0x68, 0x07, 0x84, 0xd7, 0xf1, 0xb5, 0x7c, 0x19, 0x33, 0x9d, 0x96, 0xb0, 0x71, 0xfd, 0xef,
	0xfa, 0x9d, 0x33, 0x73, 0xef, 0x69, 0xe6, 0x80, 0x5f, 0xcb, 0x3c, 0x91, 0xb5, 0x50, 0x82, 0x0c,
	0x65, 0x16, 0x4e, 0x73, 0x51, 0x55, 0x82, 0x1b, 0x25, 0x5c, 0x96, 0x42, 0x94, 0xbf, 0x70, 0xdd,
	0x52, 0x76, 0xfe, 0xb1, 0xc6, 0x4a, 0xaa, 0x9b, 0x31, 0x57, 0x35, 0xf8, 0x3b, 0x56, 0xf2, 0x94,
	0x53, 0x3c, 0x91, 0xd7, 0x60, 0x1f, 0xa5, 0x0c, 0xac, 0xc8, 0x8a, 0x9f, 0x6d, 0xc6, 0x89, 0xcc,
	0x92, 0x8f, 0x52, 0x52, 0xad, 0x91, 0x25, 0xf8, 0x05, 0x5e, 0x58, 0x8e, 0x07, 0x56, 0x04, 0xc3,
	0xc8, 0x8a, 0x6d, 0xea, 0x19, 0x21, 0x2d, 0xc8, 0x2b, 0x18, 0x9f, 0x1b, 0xac, 0xb5, 0x65, 0xb7,
	0x96, 0xab, 0x31, 0x2d, 0xc8, 0x0b, 0x70, 0x94, 0xf8, 0x89, 0x3c, 0x18, 0x45, 0x56, 0xec, 0x53,
	0x03, 0xab, 0xbf, 0x16, 0xf8, 0xdf, 0xe5, 0x37, 0x6c, 0x9a, 0x63, 0x89, 0xe4, 0x03, 0xcc, 0x6a,
	0xcc, 0x91, 0x5d, 0xb0, 0x3e, 0xa8, 0x9b, 0xc4, 0x6e, 0xfd, 0x5c, 0xaf, 0xa7, 0x9d, 0xb1, 0xbf,
	0x49, 0xa4, 0xd3, 0xfa, 0x81, 0x48, 0x08, 0x5e, 0xcf, 0x7d, 0x9e, 0x9e, 0xc9, 0x1c, 0xec, 0x06,
	0x4f, 0x5d, 0x16, 0xfd, 0xa9, 0xe3, 0x37, 0xc8, 0x8b, 0x83, 0x62, 0x15, 0xb6, 0x61, 0x6c, 0xea,
	0x69, 0x61, 0xcf, 0x2a, 0x24, 0x6f, 0x60, 0xa4, 0xf0, 0xaa, 0x02, 0x27, 0xb2, 0xe2, 0xc9, 0xc6,
	0xd3, 0x8b, 0xf7, 0x78, 0x55, 0xdb, 0x01, 0x6d, 0x75, 0xf2, 0x16, 0x1c, 0x56, 0x1d, 0x4b, 0x0c,
	0xdc, 0xf6, 0x80, 0xaf, 0x0f, 0xa4, 0x5a, 0xd8, 0x0e, 0xa8, 0x71, 0x3e, 0xf9, 0x30, 0xce, 0x05,
	0x57, 0xc8, 0xd5, 0xea, 0x8f, 0x05, 0x93, 0xcf, 0xe2, 0x37, 0xef, 0xff, 0x6f, 0x01, 0xae, 0xde,
	0x74, 0x8f, 0xd9, 0xd1, 0xd3, 0x86, 0x7c, 0x09, 0xcf, 0x77, 0xc8, 0x8b, 0x2e, 0x23, 0xc5, 0x46,
	0x0a, 0xde, 0xe0, 0x86, 0x83, 0xf3, 0x55, 0x94, 0x2c, 0x27, 0x6b, 0x70, 0x4d, 0x2d, 0xc8, 0x4c,
	0x0f, 0xba, 0x57, 0x24, 0x5c, 0x24, 0xa6, 0x4d, 0x49, 0xdf, 0xa6, 0xe4, 0x8b, 0x6e, 0x13, 0x79,
	0x0f, 0x93, 0x87, 0x81, 0xe6, 0xd6, 0xfd, 0x8d, 0xff, 0x77, 0x2b, 0x73, 0x5b, 0x7e, 0xf7, 0x2f,
	0x00, 0x00, 0xff, 0xff, 0x67, 0x67, 0x62, 0xf1, 0xc0, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LogicClient is the client API for Logic service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogicClient interface {
	SignIn(ctx context.Context, in *SignInReq, opts ...grpc.CallOption) (*empty.Empty, error)
	SendMessage(ctx context.Context, in *UpMessage, opts ...grpc.CallOption) (*empty.Empty, error)
}

type logicClient struct {
	cc grpc.ClientConnInterface
}

func NewLogicClient(cc grpc.ClientConnInterface) LogicClient {
	return &logicClient{cc}
}

func (c *logicClient) SignIn(ctx context.Context, in *SignInReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.Logic/SignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) SendMessage(ctx context.Context, in *UpMessage, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.Logic/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogicServer is the server API for Logic service.
type LogicServer interface {
	SignIn(context.Context, *SignInReq) (*empty.Empty, error)
	SendMessage(context.Context, *UpMessage) (*empty.Empty, error)
}

// UnimplementedLogicServer can be embedded to have forward compatible implementations.
type UnimplementedLogicServer struct {
}

func (*UnimplementedLogicServer) SignIn(ctx context.Context, req *SignInReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignIn not implemented")
}
func (*UnimplementedLogicServer) SendMessage(ctx context.Context, req *UpMessage) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}

func RegisterLogicServer(s *grpc.Server, srv LogicServer) {
	s.RegisterService(&_Logic_serviceDesc, srv)
}

func _Logic_SignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignInReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).SignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Logic/SignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).SignIn(ctx, req.(*SignInReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Logic/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).SendMessage(ctx, req.(*UpMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Logic_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Logic",
	HandlerType: (*LogicServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignIn",
			Handler:    _Logic_SignIn_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _Logic_SendMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}
