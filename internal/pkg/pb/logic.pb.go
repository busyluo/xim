// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logic.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SignInReq struct {
	App                  App      `protobuf:"varint,1,opt,name=app,proto3,enum=pb.App" json:"app,omitempty"`
	DeviceId             int64    `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	UserId               int64    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInReq) Reset()         { *m = SignInReq{} }
func (m *SignInReq) String() string { return proto.CompactTextString(m) }
func (*SignInReq) ProtoMessage()    {}
func (*SignInReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{0}
}

func (m *SignInReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInReq.Unmarshal(m, b)
}
func (m *SignInReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInReq.Marshal(b, m, deterministic)
}
func (m *SignInReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInReq.Merge(m, src)
}
func (m *SignInReq) XXX_Size() int {
	return xxx_messageInfo_SignInReq.Size(m)
}
func (m *SignInReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInReq.DiscardUnknown(m)
}

var xxx_messageInfo_SignInReq proto.InternalMessageInfo

func (m *SignInReq) GetApp() App {
	if m != nil {
		return m.App
	}
	return App_APP_UNKNOWN
}

func (m *SignInReq) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *SignInReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *SignInReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// 消息内容
type Content struct {
	// Types that are valid to be assigned to Content:
	//	*Content_Text
	//	*Content_Image
	Content              isContent_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Content) Reset()         { *m = Content{} }
func (m *Content) String() string { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()    {}
func (*Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{1}
}

func (m *Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Content.Unmarshal(m, b)
}
func (m *Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Content.Marshal(b, m, deterministic)
}
func (m *Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Content.Merge(m, src)
}
func (m *Content) XXX_Size() int {
	return xxx_messageInfo_Content.Size(m)
}
func (m *Content) XXX_DiscardUnknown() {
	xxx_messageInfo_Content.DiscardUnknown(m)
}

var xxx_messageInfo_Content proto.InternalMessageInfo

type isContent_Content interface {
	isContent_Content()
}

type Content_Text struct {
	Text *Text `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type Content_Image struct {
	Image *Image `protobuf:"bytes,2,opt,name=image,proto3,oneof"`
}

func (*Content_Text) isContent_Content() {}

func (*Content_Image) isContent_Content() {}

func (m *Content) GetContent() isContent_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Content) GetText() *Text {
	if x, ok := m.GetContent().(*Content_Text); ok {
		return x.Text
	}
	return nil
}

func (m *Content) GetImage() *Image {
	if x, ok := m.GetContent().(*Content_Image); ok {
		return x.Image
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Content) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Content_Text)(nil),
		(*Content_Image)(nil),
	}
}

// 上行消息
type UpMessage struct {
	ReceiverType         ReceiverType `protobuf:"varint,1,opt,name=receiver_type,json=receiverType,proto3,enum=pb.ReceiverType" json:"receiver_type,omitempty"`
	Receiver             int64        `protobuf:"varint,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Seq                  int64        `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	SendTime             int64        `protobuf:"varint,4,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	Content              *Content     `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpMessage) Reset()         { *m = UpMessage{} }
func (m *UpMessage) String() string { return proto.CompactTextString(m) }
func (*UpMessage) ProtoMessage()    {}
func (*UpMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{2}
}

func (m *UpMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpMessage.Unmarshal(m, b)
}
func (m *UpMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpMessage.Marshal(b, m, deterministic)
}
func (m *UpMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpMessage.Merge(m, src)
}
func (m *UpMessage) XXX_Size() int {
	return xxx_messageInfo_UpMessage.Size(m)
}
func (m *UpMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UpMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UpMessage proto.InternalMessageInfo

func (m *UpMessage) GetReceiverType() ReceiverType {
	if m != nil {
		return m.ReceiverType
	}
	return ReceiverType_RECEIVER_UNKNOWN
}

func (m *UpMessage) GetReceiver() int64 {
	if m != nil {
		return m.Receiver
	}
	return 0
}

func (m *UpMessage) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *UpMessage) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *UpMessage) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

// 下行消息
type DownMessage struct {
	Sender               int64    `protobuf:"varint,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Seq                  int64    `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	SendTime             int64    `protobuf:"varint,4,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	Content              *Content `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownMessage) Reset()         { *m = DownMessage{} }
func (m *DownMessage) String() string { return proto.CompactTextString(m) }
func (*DownMessage) ProtoMessage()    {}
func (*DownMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{3}
}

func (m *DownMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownMessage.Unmarshal(m, b)
}
func (m *DownMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownMessage.Marshal(b, m, deterministic)
}
func (m *DownMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownMessage.Merge(m, src)
}
func (m *DownMessage) XXX_Size() int {
	return xxx_messageInfo_DownMessage.Size(m)
}
func (m *DownMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DownMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DownMessage proto.InternalMessageInfo

func (m *DownMessage) GetSender() int64 {
	if m != nil {
		return m.Sender
	}
	return 0
}

func (m *DownMessage) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *DownMessage) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *DownMessage) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

type SendMessageResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageResponse) Reset()         { *m = SendMessageResponse{} }
func (m *SendMessageResponse) String() string { return proto.CompactTextString(m) }
func (*SendMessageResponse) ProtoMessage()    {}
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{4}
}

func (m *SendMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageResponse.Unmarshal(m, b)
}
func (m *SendMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageResponse.Marshal(b, m, deterministic)
}
func (m *SendMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageResponse.Merge(m, src)
}
func (m *SendMessageResponse) XXX_Size() int {
	return xxx_messageInfo_SendMessageResponse.Size(m)
}
func (m *SendMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageResponse proto.InternalMessageInfo

type DispatchReq struct {
	Id                   []int64      `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	Msg                  *DownMessage `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DispatchReq) Reset()         { *m = DispatchReq{} }
func (m *DispatchReq) String() string { return proto.CompactTextString(m) }
func (*DispatchReq) ProtoMessage()    {}
func (*DispatchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{5}
}

func (m *DispatchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DispatchReq.Unmarshal(m, b)
}
func (m *DispatchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DispatchReq.Marshal(b, m, deterministic)
}
func (m *DispatchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DispatchReq.Merge(m, src)
}
func (m *DispatchReq) XXX_Size() int {
	return xxx_messageInfo_DispatchReq.Size(m)
}
func (m *DispatchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DispatchReq.DiscardUnknown(m)
}

var xxx_messageInfo_DispatchReq proto.InternalMessageInfo

func (m *DispatchReq) GetId() []int64 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DispatchReq) GetMsg() *DownMessage {
	if m != nil {
		return m.Msg
	}
	return nil
}

func init() {
	proto.RegisterType((*SignInReq)(nil), "pb.SignInReq")
	proto.RegisterType((*Content)(nil), "pb.Content")
	proto.RegisterType((*UpMessage)(nil), "pb.UpMessage")
	proto.RegisterType((*DownMessage)(nil), "pb.DownMessage")
	proto.RegisterType((*SendMessageResponse)(nil), "pb.SendMessageResponse")
	proto.RegisterType((*DispatchReq)(nil), "pb.DispatchReq")
}

func init() { proto.RegisterFile("logic.proto", fileDescriptor_60207fea82c31ca8) }

var fileDescriptor_60207fea82c31ca8 = []byte{
	// 458 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x52, 0xcd, 0x6f, 0xd3, 0x30,
	0x14, 0x5f, 0xea, 0xf5, 0x23, 0x2f, 0xfb, 0x92, 0x81, 0x11, 0x3a, 0x09, 0x75, 0x95, 0x90, 0x7a,
	0x4a, 0xa5, 0x00, 0x17, 0x4e, 0x0c, 0x86, 0xb4, 0x4a, 0x70, 0xf1, 0x8a, 0x38, 0x56, 0x6d, 0xf2,
	0x08, 0x16, 0x8b, 0xed, 0xc5, 0xde, 0x58, 0xc5, 0xbf, 0xc5, 0x1f, 0x88, 0x5e, 0x9c, 0x84, 0x5e,
	0x76, 0xe4, 0x96, 0xdf, 0x7b, 0xf6, 0xef, 0x23, 0xfe, 0x41, 0x74, 0xa3, 0x0b, 0x99, 0x25, 0xa6,
	0xd2, 0x4e, 0xf3, 0x9e, 0xd9, 0x8c, 0x0f, 0x32, 0x5d, 0x96, 0x5a, 0xf9, 0xc9, 0xf8, 0xac, 0xd0,
	0xba, 0xb8, 0xc1, 0x79, 0x8d, 0x36, 0x77, 0xdf, 0xe7, 0x58, 0x1a, 0xb7, 0xf5, 0xcb, 0x69, 0x05,
	0xe1, 0xb5, 0x2c, 0xd4, 0x42, 0x09, 0xbc, 0xe5, 0x2f, 0x80, 0xad, 0x8d, 0x89, 0x83, 0x49, 0x30,
	0x3b, 0x4a, 0x87, 0x89, 0xd9, 0x24, 0x17, 0xc6, 0x08, 0x9a, 0xf1, 0x33, 0x08, 0x73, 0xbc, 0x97,
	0x19, 0xae, 0x64, 0x1e, 0xf7, 0x26, 0xc1, 0x8c, 0x89, 0x91, 0x1f, 0x2c, 0x72, 0xfe, 0x1c, 0x86,
	0x77, 0x16, 0x2b, 0x5a, 0xb1, 0x7a, 0x35, 0x20, 0xb8, 0xc8, 0xf9, 0x53, 0xe8, 0x3b, 0xfd, 0x13,
	0x55, 0xbc, 0x3f, 0x09, 0x66, 0xa1, 0xf0, 0x60, 0xfa, 0x0d, 0x86, 0x1f, 0xb5, 0x72, 0xa8, 0x1c,
	0x7f, 0x09, 0xfb, 0x0e, 0x1f, 0x5c, 0x2d, 0x19, 0xa5, 0x23, 0x92, 0x5c, 0xe2, 0x83, 0xbb, 0xda,
	0x13, 0xf5, 0x9c, 0x9f, 0x43, 0x5f, 0x96, 0xeb, 0x02, 0x6b, 0xc9, 0x28, 0x0d, 0xe9, 0xc0, 0x82,
	0x06, 0x57, 0x7b, 0xc2, 0x6f, 0x3e, 0x84, 0x30, 0xcc, 0x3c, 0xdb, 0xf4, 0x4f, 0x00, 0xe1, 0x57,
	0xf3, 0x05, 0xad, 0x5d, 0x17, 0xc8, 0xdf, 0xc2, 0x61, 0x85, 0x19, 0xca, 0x7b, 0xac, 0x56, 0x6e,
	0x6b, 0xb0, 0xc9, 0x75, 0x42, 0x1c, 0xa2, 0x59, 0x2c, 0xb7, 0x06, 0xc5, 0x41, 0xb5, 0x83, 0xf8,
	0x18, 0x46, 0x2d, 0x6e, 0x83, 0xb6, 0x98, 0x9f, 0x00, 0xb3, 0x78, 0xdb, 0x84, 0xa4, 0x4f, 0xfa,
	0x2f, 0x16, 0x55, 0xbe, 0x72, 0xb2, 0xc4, 0x3a, 0x25, 0x13, 0x23, 0x1a, 0x2c, 0x65, 0x89, 0xfc,
	0x55, 0x67, 0x2d, 0xee, 0xd7, 0xfe, 0x23, 0xd2, 0x6e, 0xb2, 0x8b, 0xce, 0xf6, 0x6f, 0x88, 0x2e,
	0xf5, 0x2f, 0xd5, 0xfa, 0x3e, 0x85, 0x01, 0x31, 0x74, 0xf2, 0x0d, 0xfa, 0x4f, 0xe2, 0xcf, 0xe0,
	0xc9, 0x35, 0xaa, 0xbc, 0x11, 0x17, 0x68, 0x8d, 0x56, 0x16, 0xa7, 0xef, 0x21, 0xba, 0x94, 0xd6,
	0xac, 0x5d, 0xf6, 0x83, 0x9a, 0x71, 0x04, 0x3d, 0x99, 0xc7, 0xc1, 0x84, 0xcd, 0x98, 0xe8, 0xc9,
	0x9c, 0x9f, 0x03, 0x2b, 0x6d, 0xd1, 0xbc, 0xca, 0x31, 0x11, 0xef, 0x24, 0x10, 0xb4, 0x4b, 0x15,
	0xf4, 0x3f, 0x53, 0x2f, 0xf9, 0x1c, 0x06, 0xbe, 0x62, 0xfc, 0x90, 0x0e, 0x76, 0x75, 0x1b, 0x9f,
	0x26, 0xbe, 0x99, 0x49, 0xdb, 0xcc, 0xe4, 0x13, 0x35, 0x93, 0xbf, 0x81, 0x68, 0xc7, 0x92, 0xbf,
	0xd5, 0x3d, 0xeb, 0x63, 0xb7, 0xd2, 0x0b, 0x60, 0xcb, 0xcc, 0xf0, 0x77, 0x70, 0xdc, 0x1a, 0x6f,
	0x09, 0xbc, 0xbf, 0x7f, 0x69, 0x1e, 0xa3, 0xd8, 0x0c, 0x6a, 0xfc, 0xfa, 0x6f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xf9, 0x71, 0x3b, 0x79, 0x51, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LogicClient is the client API for Logic service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogicClient interface {
	SignIn(ctx context.Context, in *SignInReq, opts ...grpc.CallOption) (*empty.Empty, error)
	SendMessage(ctx context.Context, in *UpMessage, opts ...grpc.CallOption) (*empty.Empty, error)
}

type logicClient struct {
	cc grpc.ClientConnInterface
}

func NewLogicClient(cc grpc.ClientConnInterface) LogicClient {
	return &logicClient{cc}
}

func (c *logicClient) SignIn(ctx context.Context, in *SignInReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.Logic/SignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) SendMessage(ctx context.Context, in *UpMessage, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.Logic/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogicServer is the server API for Logic service.
type LogicServer interface {
	SignIn(context.Context, *SignInReq) (*empty.Empty, error)
	SendMessage(context.Context, *UpMessage) (*empty.Empty, error)
}

// UnimplementedLogicServer can be embedded to have forward compatible implementations.
type UnimplementedLogicServer struct {
}

func (*UnimplementedLogicServer) SignIn(ctx context.Context, req *SignInReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignIn not implemented")
}
func (*UnimplementedLogicServer) SendMessage(ctx context.Context, req *UpMessage) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}

func RegisterLogicServer(s *grpc.Server, srv LogicServer) {
	s.RegisterService(&_Logic_serviceDesc, srv)
}

func _Logic_SignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignInReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).SignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Logic/SignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).SignIn(ctx, req.(*SignInReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Logic/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).SendMessage(ctx, req.(*UpMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Logic_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Logic",
	HandlerType: (*LogicServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignIn",
			Handler:    _Logic_SignIn_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _Logic_SendMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logic.proto",
}

// TcpClient is the client API for Tcp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TcpClient interface {
	DispatchMessage(ctx context.Context, in *DispatchReq, opts ...grpc.CallOption) (*empty.Empty, error)
}

type tcpClient struct {
	cc grpc.ClientConnInterface
}

func NewTcpClient(cc grpc.ClientConnInterface) TcpClient {
	return &tcpClient{cc}
}

func (c *tcpClient) DispatchMessage(ctx context.Context, in *DispatchReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.Tcp/DispatchMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TcpServer is the server API for Tcp service.
type TcpServer interface {
	DispatchMessage(context.Context, *DispatchReq) (*empty.Empty, error)
}

// UnimplementedTcpServer can be embedded to have forward compatible implementations.
type UnimplementedTcpServer struct {
}

func (*UnimplementedTcpServer) DispatchMessage(ctx context.Context, req *DispatchReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DispatchMessage not implemented")
}

func RegisterTcpServer(s *grpc.Server, srv TcpServer) {
	s.RegisterService(&_Tcp_serviceDesc, srv)
}

func _Tcp_DispatchMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DispatchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TcpServer).DispatchMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Tcp/DispatchMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TcpServer).DispatchMessage(ctx, req.(*DispatchReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tcp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Tcp",
	HandlerType: (*TcpServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DispatchMessage",
			Handler:    _Tcp_DispatchMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logic.proto",
}
